name: release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Upload Release Assets
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install python packages
        run: poetry install
      - name: Build package
        run: poetry build
      - name: Parse version
        id: version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }} 
          release_name: Release ${{ steps.version.outputs.version }} 
          draft: true # TODO: false
          prerelease: true # TODO: false
      - name: Upload tar.gz to Release
        id: upload-tar 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./shot-${{ steps.version.outputs.version }}.tar.gz
          asset_name: shot-${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/tar+gz
      - name: Upload wheel to Release
        id: upload-wheel 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./shot-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_name: shot-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/x-pywheel+zip